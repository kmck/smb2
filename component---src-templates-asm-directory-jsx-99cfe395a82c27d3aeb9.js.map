{"version":3,"sources":["webpack:///./src/templates/AsmDirectory.jsx"],"names":["styled","className","data","path","nodes","allAsmSource","title","map","key","to","pageQuery"],"mappings":"0FAAA,uGAyBeA,6BAlBU,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAEzBC,EACdF,EADFG,aAAgBD,MAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAOH,IACZ,wBAAIF,UAAWA,GACZG,EAAMG,KAAI,gBAAGJ,EAAH,EAAGA,KAAH,OACT,wBAAIK,IAAKL,GACP,kBAAC,OAAD,CAAMM,GAAIN,GAAOA,YAQ7B,mEAAeH,CAAf,MAEO,IAAMU,EAAS","file":"component---src-templates-asm-directory-jsx-99cfe395a82c27d3aeb9.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst AsmDirectoryPage = ({ className, data, path }) => {\n  const {\n    allAsmSource: { nodes },\n  } = data;\n  return (\n    <Layout>\n      <SEO title={path} />\n      <ul className={className}>\n        {nodes.map(({ path }) => (\n          <li key={path}>\n            <Link to={path}>{path}</Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nexport default styled(AsmDirectoryPage)``;\n\nexport const pageQuery = graphql`\n  query($filesGlob: String!) {\n    allAsmSource(\n      filter: { path: { glob: $filesGlob } }\n      sort: { order: ASC, fields: [path] }\n    ) {\n      nodes {\n        path\n        name\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
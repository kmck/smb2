{"componentChunkName":"component---src-templates-asm-source-jsx","path":"/src/macros.asm","webpackCompilationHash":"2ea601db5f4c75781233","result":{"data":{"asmSource":{"path":"/src/macros.asm","name":"macros","raw":";\n; Macros\n; ======\n;\n;\n\n; Include COMPATIBILITY-flag-related macros\ninclude \"src/compatibility-shims.asm\"\n\n;\n; Pad out unused space used in the original, if needed\n;\nMACRO unusedSpace padTo with\n\tIFDEF PRESERVE_UNUSED_SPACE\n\t\t.pad padTo, with\n\tENDIF\nENDM\n\n; distTo\n; Outputs distance (byte) to label\n; e.g.:\n; .db (+ - $)  is  distTo +\n;\nMACRO distTo label\n\t.db (label - $)\nENDM\n\nMACRO enemy x, y, type\n\t.db type, x << 4 | y\nENDM\n\n;\n; LevelHeader macro\n;\n; The order of the parameters is slightly different than how it's encoded, but\n; hopefully this order is a little more intuitive?\n;\nMACRO levelHeader pages, horizontal, bgPalette, spritePalette, music, objectTypeAXFX, objectType3X9X, groundSetting, groundType\n\t.db horizontal << 7 | bgPalette << 3 | spritePalette\n\t.db %11100000 | groundSetting\n\t.db pages << 4 | objectTypeAXFX << 2 | objectType3X9X\n\tIFNDEF LEVEL_ENGINE_UPGRADES\n\t\t.db groundType << 3 | music\n\tENDIF\n\tIFDEF LEVEL_ENGINE_UPGRADES\n\t\t.db groundType << 4 | music\n\tENDIF\nENDM\n\nMACRO musicPointerOffset label, offset\n\t.db (label - MusicPointerOffset + offset)\nENDM\n\nMACRO musicPart label\n\t.db (label - MusicPartPointers)\nENDM\n\nMACRO noteLength label\n\t.db (label - NoteLengthTable)\nENDM\n\n;\n; MusicHeader macro, to replace this:\n;\tnoteLength NoteLengthTable_300bpm\n;\t.dw MusicDataXXX\n;\t.db MusicDataXXX_Triangle - MusicDataXXX\n;\t.db MusicDataXXX_Square1 - MusicDataXXX\n;\t.db MusicDataXXX_Noise - MusicDataXXX\n;\t; no noise channel, using $00 from below\n;\n; Setting \"noise\" or \"dpcm\" to -1 will suppress output of $00 for music headers\n; \"reuse\" the note length from the following header to save bytes.\n;\n; If EXPAND_MUSIC is enabled, the $00 will always be output.\n;\nMACRO musicHeader noteLengthLabel, square2, triangle, square1, noise, dpcm\n\tnoteLength noteLengthLabel\n\t.dw square2\n\tIF triangle <= 0\n\t\t.db $00\n\tELSE\n\t\t.db (triangle - square2)\n\tENDIF\n\tIF square1 <= 0\n\t\t.db $00\n\tELSE\n\t\t.db (square1 - square2)\n\tENDIF\n\n\tIFNDEF EXPAND_MUSIC\n\t\tIF noise = 0\n\t\t\t.db $00\n\t\tELSEIF noise > 0\n\t\t\t.db (noise - square2)\n\t\tENDIF\n\t\tIF dpcm = 0\n\t\t\t.db $00\n\t\tELSEIF dpcm > 0\n\t\t\t.db (dpcm - square2)\n\t\tENDIF\n\tELSE\n\t\tIF noise <= 0\n\t\t\t.db $00\n\t\tELSE\n\t\t\t.db (noise - square2)\n\t\tENDIF\n\t\tIF dpcm <= 0\n\t\t\t.db $00\n\t\tELSE\n\t\t\t.db (dpcm - square2)\n\t\tENDIF\n\tENDIF\nENDM\n","sections":[{"comment":"\nMacros\n======\n\n","content":"","htmlComment":"<h1>Macros</h1>\n","htmlContent":"","line":6},{"comment":"Include COMPATIBILITY-flag-related macros","content":"include \"src/compatibility-shims.asm\"\n","htmlComment":"<p>Include COMPATIBILITY-flag-related macros</p>\n","htmlContent":"include <a class=\"token string\" href=\"/src/compatibility-shims.asm\">\"src/compatibility-shims.asm\"</a>\n","line":8},{"comment":"\nPad out unused space used in the original, if needed\n","content":"MACRO unusedSpace padTo with\n\tIFDEF PRESERVE_UNUSED_SPACE\n\t\t.pad padTo, with\n\tENDIF\nENDM\n","htmlComment":"<p>Pad out unused space used in the original, if needed</p>\n","htmlContent":"MACRO unusedSpace padTo with\n\tIFDEF PRESERVE_UNUSED_SPACE\n\t\t<span class=\"token directive keyword\">.pad</span> padTo, with\n\tENDIF\nENDM\n","line":13},{"comment":"distTo\nOutputs distance (byte) to label\ne.g.:\n.db (+ - $)  is  distTo +\n","content":"MACRO distTo label\n\t.db (label - $)\nENDM\n\nMACRO enemy x, y, type\n\t.db type, x << 4 | y\nENDM\n","htmlComment":"<p>distTo\nOutputs distance (byte) to label\ne.g.:\n.db (+ - $)  is  distTo +</p>\n","htmlContent":"MACRO distTo label\n\t<span class=\"token directive keyword\">.db</span> (label - $)\nENDM\n\nMACRO enemy <span class=\"token register variable\">x</span>, <span class=\"token register variable\">y</span>, type\n\t<span class=\"token directive keyword\">.db</span> type, <span class=\"token register variable\">x</span> &#x3C;&#x3C; <span class=\"token decimalnumber string\">4</span> | <span class=\"token register variable\">y</span>\nENDM\n","line":24},{"comment":"\nLevelHeader macro\n\nThe order of the parameters is slightly different than how it's encoded, but\nhopefully this order is a little more intuitive?\n","content":"MACRO levelHeader pages, horizontal, bgPalette, spritePalette, music, objectTypeAXFX, objectType3X9X, groundSetting, groundType\n\t.db horizontal << 7 | bgPalette << 3 | spritePalette\n\t.db %11100000 | groundSetting\n\t.db pages << 4 | objectTypeAXFX << 2 | objectType3X9X\n\tIFNDEF LEVEL_ENGINE_UPGRADES\n\t\t.db groundType << 3 | music\n\tENDIF\n\tIFDEF LEVEL_ENGINE_UPGRADES\n\t\t.db groundType << 4 | music\n\tENDIF\nENDM\n\nMACRO musicPointerOffset label, offset\n\t.db (label - MusicPointerOffset + offset)\nENDM\n\nMACRO musicPart label\n\t.db (label - MusicPartPointers)\nENDM\n\nMACRO noteLength label\n\t.db (label - NoteLengthTable)\nENDM\n","htmlComment":"<p>LevelHeader macro</p>\n<p>The order of the parameters is slightly different than how it's encoded, but\nhopefully this order is a little more intuitive?</p>\n","htmlContent":"MACRO levelHeader pages, horizontal, bgPalette, spritePalette, music, objectTypeAXFX, objectType<span class=\"token decimalnumber string\">3</span><span class=\"token register variable\">X</span><span class=\"token decimalnumber string\">9</span><span class=\"token register variable\">X</span>, groundSetting, groundType\n\t<span class=\"token directive keyword\">.db</span> horizontal &#x3C;&#x3C; <span class=\"token decimalnumber string\">7</span> | bgPalette &#x3C;&#x3C; <span class=\"token decimalnumber string\">3</span> | spritePalette\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token binarynumber string\">%11100000</span> | groundSetting\n\t<span class=\"token directive keyword\">.db</span> pages &#x3C;&#x3C; <span class=\"token decimalnumber string\">4</span> | objectTypeAXFX &#x3C;&#x3C; <span class=\"token decimalnumber string\">2</span> | objectType<span class=\"token decimalnumber string\">3</span><span class=\"token register variable\">X</span><span class=\"token decimalnumber string\">9</span><span class=\"token register variable\">X</span>\n\tIFNDEF LEVEL_ENGINE_UPGRADES\n\t\t<span class=\"token directive keyword\">.db</span> groundType &#x3C;&#x3C; <span class=\"token decimalnumber string\">3</span> | music\n\tENDIF\n\tIFDEF LEVEL_ENGINE_UPGRADES\n\t\t<span class=\"token directive keyword\">.db</span> groundType &#x3C;&#x3C; <span class=\"token decimalnumber string\">4</span> | music\n\tENDIF\nENDM\n\nMACRO musicPointerOffset label, offset\n\t<span class=\"token directive keyword\">.db</span> (label - MusicPointerOffset + offset)\nENDM\n\nMACRO musicPart label\n\t<span class=\"token directive keyword\">.db</span> (label - MusicPartPointers)\nENDM\n\nMACRO noteLength label\n\t<span class=\"token directive keyword\">.db</span> (label - NoteLengthTable)\nENDM\n","line":38},{"comment":"\nMusicHeader macro, to replace this:\noteLength NoteLengthTable_300bpm\ndw MusicDataXXX\ndb MusicDataXXX_Triangle - MusicDataXXX\ndb MusicDataXXX_Square1 - MusicDataXXX\ndb MusicDataXXX_Noise - MusicDataXXX\n no noise channel, using $00 from below\n\nSetting \"noise\" or \"dpcm\" to -1 will suppress output of $00 for music headers\n\"reuse\" the note length from the following header to save bytes.\n\nIf EXPAND_MUSIC is enabled, the $00 will always be output.\n","content":"MACRO musicHeader noteLengthLabel, square2, triangle, square1, noise, dpcm\n\tnoteLength noteLengthLabel\n\t.dw square2\n\tIF triangle <= 0\n\t\t.db $00\n\tELSE\n\t\t.db (triangle - square2)\n\tENDIF\n\tIF square1 <= 0\n\t\t.db $00\n\tELSE\n\t\t.db (square1 - square2)\n\tENDIF\n\n\tIFNDEF EXPAND_MUSIC\n\t\tIF noise = 0\n\t\t\t.db $00\n\t\tELSEIF noise > 0\n\t\t\t.db (noise - square2)\n\t\tENDIF\n\t\tIF dpcm = 0\n\t\t\t.db $00\n\t\tELSEIF dpcm > 0\n\t\t\t.db (dpcm - square2)\n\t\tENDIF\n\tELSE\n\t\tIF noise <= 0\n\t\t\t.db $00\n\t\tELSE\n\t\t\t.db (noise - square2)\n\t\tENDIF\n\t\tIF dpcm <= 0\n\t\t\t.db $00\n\t\tELSE\n\t\t\t.db (dpcm - square2)\n\t\tENDIF\n\tENDIF\nENDM\n","htmlComment":"<p>MusicHeader macro, to replace this:\noteLength NoteLengthTable_300bpm\ndw MusicDataXXX\ndb MusicDataXXX_Triangle - MusicDataXXX\ndb MusicDataXXX_Square1 - MusicDataXXX\ndb MusicDataXXX_Noise - MusicDataXXX\nno noise channel, using $00 from below</p>\n<p>Setting \"noise\" or \"dpcm\" to -1 will suppress output of $00 for music headers\n\"reuse\" the note length from the following header to save bytes.</p>\n<p>If EXPAND_MUSIC is enabled, the $00 will always be output.</p>\n","htmlContent":"MACRO musicHeader noteLengthLabel, square<span class=\"token decimalnumber string\">2</span>, triangle, square<span class=\"token decimalnumber string\">1</span>, noise, dpcm\n\tnoteLength noteLengthLabel\n\t<span class=\"token directive keyword\">.dw</span> square<span class=\"token decimalnumber string\">2</span>\n\tIF triangle &#x3C;= <span class=\"token decimalnumber string\">0</span>\n\t\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$00</span>\n\tELSE\n\t\t<span class=\"token directive keyword\">.db</span> (triangle - square<span class=\"token decimalnumber string\">2</span>)\n\tENDIF\n\tIF square<span class=\"token decimalnumber string\">1</span> &#x3C;= <span class=\"token decimalnumber string\">0</span>\n\t\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$00</span>\n\tELSE\n\t\t<span class=\"token directive keyword\">.db</span> (square<span class=\"token decimalnumber string\">1</span> - square<span class=\"token decimalnumber string\">2</span>)\n\tENDIF\n\n\tIFNDEF EXPAND_MUSIC\n\t\tIF noise = <span class=\"token decimalnumber string\">0</span>\n\t\t\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$00</span>\n\t\tELSEIF noise > <span class=\"token decimalnumber string\">0</span>\n\t\t\t<span class=\"token directive keyword\">.db</span> (noise - square<span class=\"token decimalnumber string\">2</span>)\n\t\tENDIF\n\t\tIF dpcm = <span class=\"token decimalnumber string\">0</span>\n\t\t\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$00</span>\n\t\tELSEIF dpcm > <span class=\"token decimalnumber string\">0</span>\n\t\t\t<span class=\"token directive keyword\">.db</span> (dpcm - square<span class=\"token decimalnumber string\">2</span>)\n\t\tENDIF\n\tELSE\n\t\tIF noise &#x3C;= <span class=\"token decimalnumber string\">0</span>\n\t\t\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$00</span>\n\t\tELSE\n\t\t\t<span class=\"token directive keyword\">.db</span> (noise - square<span class=\"token decimalnumber string\">2</span>)\n\t\tENDIF\n\t\tIF dpcm &#x3C;= <span class=\"token decimalnumber string\">0</span>\n\t\t\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$00</span>\n\t\tELSE\n\t\t\t<span class=\"token directive keyword\">.db</span> (dpcm - square<span class=\"token decimalnumber string\">2</span>)\n\t\tENDIF\n\tENDIF\nENDM\n","line":76}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}
{"componentChunkName":"component---src-templates-asm-source-jsx","path":"/smb2.asm","webpackCompilationHash":"0a0d43c2c0dda6221466","result":{"data":{"asmSource":{"path":"/smb2.asm","name":"smb2","raw":"; -----------------------------------------\n; -----------------------------------------\n;   Super Mario Bros. 2 (USA) disassembly\n;     https://github.com/xkeeper0/smb2/\n; -----------------------------------------\n; -----------------------------------------\n\n.include \"config.asm\"\n.include \"constants.asm\"\n\nINES_MAPPER = MAPPER_MMC3\nIFDEF FME7\n\tINES_MAPPER = MAPPER_FME7\nENDIF\nIFDEF MMC5\n\tINES_MAPPER = MAPPER_MMC5\nENDIF\n\n; -----------------------------------------\n; Add NES header\n\t.db \"NES\", $1a ; identification of the iNES header\n\nIFDEF EXPAND_PRG\n\t.db 16 ; this can go up to 32\nELSE\n\t.db 8 ; number of 16KB PRG-ROM pages\nENDIF\n\nIFDEF EXPAND_CHR\n\t.db 32\nELSE\n\t.db 16 ; number of 8KB CHR-ROM pages\nENDIF\n\nIF INES_MAPPER == MAPPER_FME7\n\t.db (INES_MAPPER & %00001111) << 4 ; mapper (lower nybble) and mirroring\n\t.db (INES_MAPPER & %11110000) | %1000 ; mapper (upper nybble) and iNES 2.0\n\t.dsb 2, $00\n\t.db $70 ; flags 10\n\t.dsb 5, $00 ; clear the remaining bytes\nELSEIF INES_MAPPER == MAPPER_MMC5\n\t.db (INES_MAPPER & %00001111) << 4 | %10 ; mapper (lower nybble) and mirroring\n\t.dsb 3, $00\n\t.db $70 ; flags 10\n\t.dsb 5, $00 ; clear the remaining bytes\nELSE ; INES_MAPPER == MAPPER_MMC3\n\t.db (INES_MAPPER & %00001111) << 4 ; mapper (lower nybble) and mirroring\n\t.db INES_MAPPER & %11110000 ; mapper (upper nybble)\n\t.dsb 8, $00 ; clear the remaining bytes\nENDIF\n\n; -----------------------------------------\n; Add macros\n.include \"src/macros.asm\"\n\n; -----------------------------------------\n; Add definitions\n.enum $0000\n.include \"src/defs.asm\"\n.ende\n\n; Add RAM definitions\n.enum $0000\n.include \"src/ram.asm\"\n.ende\n\n; -----------------------------------------\n; Add each of the 16 banks.\n; In SMB2, banks are swapped in pairs.\n; The game was clearly designed originally to use the MMC1 mapper,\n; and very minimal changes were made to make that work.\n; These banks are still TECHNICALLY two different banks,\n; but due to this little hack a lot of data runs between\n; bank boundaries, and it's easier to keep together\n; You should split these again if you plan on making any\n; really huge modifications...\n\n; ----------------------------------------\n; Banks 0 and 1. Basically potpourri.\n; Lots of crap everywhere.\n; Title screen and some other stuff too.\n.base $8000\n.include \"src/prg-0-1.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; Banks 2 and 3. Enemy/object code.\n.base $8000\n.include \"src/prg-2-3.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; Banks 4 and 5. Music engine and song data.\n.base $8000\n.include \"src/prg-4-5.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; Bank 6 and 7. Level handling ode, I think.\n; Hmm, I wonder how this actually works when\n; dealing with the fact the level data is\n; in another bank...\n; Bank 7 is completely empty.\n.base $8000\n.include \"src/prg-6-7.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; Bank 8 and 9. Entirely level data.\n; Some more unused space as usual.\n.base $8000\n.include \"src/prg-8-9.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; Banks A and B. Mostly bonus chance,\n; character stats, and some PPU commands.\n; Lots of empty space here too\n.base $8000\n.include \"src/prg-a-b.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; Banks C and D. The first half is\n; a lot of data for the credits.\n; The second half is totally empty.\n.base $8000\n.include \"src/prg-c-d.asm\"\n.pad $c000, $ff\n\n; ----------------------------------------\n; extra PRG-ROM pages (8 bank pairs)\nIFDEF EXPAND_PRG\n.dsb (8 * $4000), $ff\nENDIF\n\n; ----------------------------------------\n; Banks E and F. Fixed at $C000-FFFF.\n; Important things like NMI and often-used\n; routines.\n; Bank E also contains PCM data for the\n; drums and samples.\n.base $c000    ; Technically not needed but consistent\n.include \"src/prg-e-f.asm\"\n\n\n; -----------------------------------------\n; include CHR-ROM\n.incbin \"smb2.chr\"\n\n; ----------------------------------------\n; extra CHR-ROM pages\nIFDEF EXPAND_CHR\n.dsb (16 * $2000), $00\nENDIF\n","sections":[{"comment":"-----------------------------------------\n-----------------------------------------\nSuper Mario Bros. 2 (USA) disassembly\nhttps://github.com/xkeeper0/smb2/\n-----------------------------------------\n-----------------------------------------","content":"\n.include \"config.asm\"\n.include \"constants.asm\"\n\nINES_MAPPER = MAPPER_MMC3\nIFDEF FME7\n\tINES_MAPPER = MAPPER_FME7\nENDIF\nIFDEF MMC5\n\tINES_MAPPER = MAPPER_MMC5\nENDIF\n","htmlComment":"<hr>\n<hr>\n<p>Super Mario Bros. 2 (USA) disassembly</p>\n<h2><a href=\"https://github.com/xkeeper0/smb2/\">https://github.com/xkeeper0/smb2/</a></h2>\n<hr>\n","htmlContent":"\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/config.asm\">\"config.asm\"</a>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/constants.asm\">\"constants.asm\"</a>\n\nINES_MAPPER = MAPPER_MMC<span class=\"token decimalnumber string\">3</span>\nIFDEF FME<span class=\"token decimalnumber string\">7</span>\n\tINES_MAPPER = MAPPER_FME<span class=\"token decimalnumber string\">7</span>\nENDIF\nIFDEF MMC<span class=\"token decimalnumber string\">5</span>\n\tINES_MAPPER = MAPPER_MMC<span class=\"token decimalnumber string\">5</span>\nENDIF\n","line":7},{"comment":"-----------------------------------------\nAdd NES header","content":"\t.db \"NES\", $1a ; identification of the iNES header\n\nIFDEF EXPAND_PRG\n\t.db 16 ; this can go up to 32\nELSE\n\t.db 8 ; number of 16KB PRG-ROM pages\nENDIF\n\nIFDEF EXPAND_CHR\n\t.db 32\nELSE\n\t.db 16 ; number of 8KB CHR-ROM pages\nENDIF\n\nIF INES_MAPPER == MAPPER_FME7\n\t.db (INES_MAPPER & %00001111) << 4 ; mapper (lower nybble) and mirroring\n\t.db (INES_MAPPER & %11110000) | %1000 ; mapper (upper nybble) and iNES 2.0\n\t.dsb 2, $00\n\t.db $70 ; flags 10\n\t.dsb 5, $00 ; clear the remaining bytes\nELSEIF INES_MAPPER == MAPPER_MMC5\n\t.db (INES_MAPPER & %00001111) << 4 | %10 ; mapper (lower nybble) and mirroring\n\t.dsb 3, $00\n\t.db $70 ; flags 10\n\t.dsb 5, $00 ; clear the remaining bytes\nELSE ; INES_MAPPER == MAPPER_MMC3\n\t.db (INES_MAPPER & %00001111) << 4 ; mapper (lower nybble) and mirroring\n\t.db INES_MAPPER & %11110000 ; mapper (upper nybble)\n\t.dsb 8, $00 ; clear the remaining bytes\nENDIF\n","htmlComment":"<hr>\n<p>Add NES header</p>\n","htmlContent":"\t<span class=\"token directive keyword\">.db</span> <span class=\"token string\">\"NES\"</span>, <span class=\"token hexnumber string\">$1a</span> <span class=\"token comment\">; identification of the iNES header</span>\n\nIFDEF EXPAND_PRG\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token decimalnumber string\">16</span> <span class=\"token comment\">; this can go up to 32</span>\nELSE\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token decimalnumber string\">8</span> <span class=\"token comment\">; number of 16KB PRG-ROM pages</span>\nENDIF\n\nIFDEF EXPAND_CHR\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token decimalnumber string\">32</span>\nELSE\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token decimalnumber string\">16</span> <span class=\"token comment\">; number of 8KB CHR-ROM pages</span>\nENDIF\n\nIF INES_MAPPER == MAPPER_FME<span class=\"token decimalnumber string\">7</span>\n\t<span class=\"token directive keyword\">.db</span> (INES_MAPPER &#x26; <span class=\"token binarynumber string\">%00001111</span>) &#x3C;&#x3C; <span class=\"token decimalnumber string\">4</span> <span class=\"token comment\">; mapper (lower nybble) and mirroring</span>\n\t<span class=\"token directive keyword\">.db</span> (INES_MAPPER &#x26; <span class=\"token binarynumber string\">%11110000</span>) | <span class=\"token binarynumber string\">%1000</span> <span class=\"token comment\">; mapper (upper nybble) and iNES 2.0</span>\n\t<span class=\"token directive keyword\">.dsb</span> <span class=\"token decimalnumber string\">2</span>, <span class=\"token hexnumber string\">$00</span>\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$70</span> <span class=\"token comment\">; flags 10</span>\n\t<span class=\"token directive keyword\">.dsb</span> <span class=\"token decimalnumber string\">5</span>, <span class=\"token hexnumber string\">$00</span> <span class=\"token comment\">; clear the remaining bytes</span>\nELSEIF INES_MAPPER == MAPPER_MMC<span class=\"token decimalnumber string\">5</span>\n\t<span class=\"token directive keyword\">.db</span> (INES_MAPPER &#x26; <span class=\"token binarynumber string\">%00001111</span>) &#x3C;&#x3C; <span class=\"token decimalnumber string\">4</span> | <span class=\"token binarynumber string\">%10</span> <span class=\"token comment\">; mapper (lower nybble) and mirroring</span>\n\t<span class=\"token directive keyword\">.dsb</span> <span class=\"token decimalnumber string\">3</span>, <span class=\"token hexnumber string\">$00</span>\n\t<span class=\"token directive keyword\">.db</span> <span class=\"token hexnumber string\">$70</span> <span class=\"token comment\">; flags 10</span>\n\t<span class=\"token directive keyword\">.dsb</span> <span class=\"token decimalnumber string\">5</span>, <span class=\"token hexnumber string\">$00</span> <span class=\"token comment\">; clear the remaining bytes</span>\nELSE <span class=\"token comment\">; INES_MAPPER == MAPPER_MMC3</span>\n\t<span class=\"token directive keyword\">.db</span> (INES_MAPPER &#x26; <span class=\"token binarynumber string\">%00001111</span>) &#x3C;&#x3C; <span class=\"token decimalnumber string\">4</span> <span class=\"token comment\">; mapper (lower nybble) and mirroring</span>\n\t<span class=\"token directive keyword\">.db</span> INES_MAPPER &#x26; <span class=\"token binarynumber string\">%11110000</span> <span class=\"token comment\">; mapper (upper nybble)</span>\n\t<span class=\"token directive keyword\">.dsb</span> <span class=\"token decimalnumber string\">8</span>, <span class=\"token hexnumber string\">$00</span> <span class=\"token comment\">; clear the remaining bytes</span>\nENDIF\n","line":21},{"comment":"-----------------------------------------\nAdd macros","content":".include \"src/macros.asm\"\n","htmlComment":"<hr>\n<p>Add macros</p>\n","htmlContent":"<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/macros.asm\">\"src/macros.asm\"</a>\n","line":54},{"comment":"-----------------------------------------\nAdd definitions","content":".enum $0000\n.include \"src/defs.asm\"\n.ende\n","htmlComment":"<hr>\n<p>Add definitions</p>\n","htmlContent":"<span class=\"token directive keyword\">.enum</span> <span class=\"token hexnumber string\">$0000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/defs.asm\">\"src/defs.asm\"</a>\n.ende\n","line":58},{"comment":"Add RAM definitions","content":".enum $0000\n.include \"src/ram.asm\"\n.ende\n","htmlComment":"<p>Add RAM definitions</p>\n","htmlContent":"<span class=\"token directive keyword\">.enum</span> <span class=\"token hexnumber string\">$0000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/ram.asm\">\"src/ram.asm\"</a>\n.ende\n","line":63},{"comment":"-----------------------------------------\nAdd each of the 16 banks.\nIn SMB2, banks are swapped in pairs.\nThe game was clearly designed originally to use the MMC1 mapper,\nand very minimal changes were made to make that work.\nThese banks are still TECHNICALLY two different banks,\nbut due to this little hack a lot of data runs between\nbank boundaries, and it's easier to keep together\nYou should split these again if you plan on making any\nreally huge modifications...","content":"","htmlComment":"<hr>\n<p>Add each of the 16 banks.\nIn SMB2, banks are swapped in pairs.\nThe game was clearly designed originally to use the MMC1 mapper,\nand very minimal changes were made to make that work.\nThese banks are still TECHNICALLY two different banks,\nbut due to this little hack a lot of data runs between\nbank boundaries, and it's easier to keep together\nYou should split these again if you plan on making any\nreally huge modifications...</p>\n","htmlContent":"","line":77},{"comment":"----------------------------------------\nBanks 0 and 1. Basically potpourri.\nLots of crap everywhere.\nTitle screen and some other stuff too.","content":".base $8000\n.include \"src/prg-0-1.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Banks 0 and 1. Basically potpourri.\nLots of crap everywhere.\nTitle screen and some other stuff too.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-0-1.asm\">\"src/prg-0-1.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":82},{"comment":"----------------------------------------\nBanks 2 and 3. Enemy/object code.","content":".base $8000\n.include \"src/prg-2-3.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Banks 2 and 3. Enemy/object code.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-2-3.asm\">\"src/prg-2-3.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":88},{"comment":"----------------------------------------\nBanks 4 and 5. Music engine and song data.","content":".base $8000\n.include \"src/prg-4-5.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Banks 4 and 5. Music engine and song data.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-4-5.asm\">\"src/prg-4-5.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":94},{"comment":"----------------------------------------\nBank 6 and 7. Level handling ode, I think.\nHmm, I wonder how this actually works when\ndealing with the fact the level data is\nin another bank...\nBank 7 is completely empty.","content":".base $8000\n.include \"src/prg-6-7.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Bank 6 and 7. Level handling ode, I think.\nHmm, I wonder how this actually works when\ndealing with the fact the level data is\nin another bank...\nBank 7 is completely empty.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-6-7.asm\">\"src/prg-6-7.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":104},{"comment":"----------------------------------------\nBank 8 and 9. Entirely level data.\nSome more unused space as usual.","content":".base $8000\n.include \"src/prg-8-9.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Bank 8 and 9. Entirely level data.\nSome more unused space as usual.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-8-9.asm\">\"src/prg-8-9.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":111},{"comment":"----------------------------------------\nBanks A and B. Mostly bonus chance,\ncharacter stats, and some PPU commands.\nLots of empty space here too","content":".base $8000\n.include \"src/prg-a-b.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Banks A and B. Mostly bonus chance,\ncharacter stats, and some PPU commands.\nLots of empty space here too</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-a-b.asm\">\"src/prg-a-b.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":119},{"comment":"----------------------------------------\nBanks C and D. The first half is\na lot of data for the credits.\nThe second half is totally empty.","content":".base $8000\n.include \"src/prg-c-d.asm\"\n.pad $c000, $ff\n","htmlComment":"<hr>\n<p>Banks C and D. The first half is\na lot of data for the credits.\nThe second half is totally empty.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$8000</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-c-d.asm\">\"src/prg-c-d.asm\"</a>\n<span class=\"token directive keyword\">.pad</span> <span class=\"token hexnumber string\">$c000</span>, <span class=\"token hexnumber string\">$ff</span>\n","line":127},{"comment":"----------------------------------------\nextra PRG-ROM pages (8 bank pairs)","content":"IFDEF EXPAND_PRG\n.dsb (8 * $4000), $ff\nENDIF\n","htmlComment":"<hr>\n<p>extra PRG-ROM pages (8 bank pairs)</p>\n","htmlContent":"IFDEF EXPAND_PRG\n<span class=\"token directive keyword\">.dsb</span> (<span class=\"token decimalnumber string\">8</span> * <span class=\"token hexnumber string\">$4000</span>), <span class=\"token hexnumber string\">$ff</span>\nENDIF\n","line":133},{"comment":"----------------------------------------\nBanks E and F. Fixed at $C000-FFFF.\nImportant things like NMI and often-used\nroutines.\nBank E also contains PCM data for the\ndrums and samples.","content":".base $c000    ; Technically not needed but consistent\n.include \"src/prg-e-f.asm\"\n\n","htmlComment":"<hr>\n<p>Banks E and F. Fixed at $C000-FFFF.\nImportant things like NMI and often-used\nroutines.\nBank E also contains PCM data for the\ndrums and samples.</p>\n","htmlContent":"<span class=\"token directive keyword\">.base</span> <span class=\"token hexnumber string\">$c000</span>    <span class=\"token comment\">; Technically not needed but consistent</span>\n<span class=\"token directive keyword\">.include</span> <a class=\"token string\" href=\"/smb2/src/prg-e-f.asm\">\"src/prg-e-f.asm\"</a>\n\n","line":143},{"comment":"-----------------------------------------\ninclude CHR-ROM","content":".incbin \"smb2.chr\"\n","htmlComment":"<hr>\n<p>include CHR-ROM</p>\n","htmlContent":"<span class=\"token directive keyword\">.incbin</span> <span class=\"token string\">\"smb2.chr\"</span>\n","line":149},{"comment":"----------------------------------------\nextra CHR-ROM pages","content":"IFDEF EXPAND_CHR\n.dsb (16 * $2000), $00\nENDIF\n","htmlComment":"<hr>\n<p>extra CHR-ROM pages</p>\n","htmlContent":"IFDEF EXPAND_CHR\n<span class=\"token directive keyword\">.dsb</span> (<span class=\"token decimalnumber string\">16</span> * <span class=\"token hexnumber string\">$2000</span>), <span class=\"token hexnumber string\">$00</span>\nENDIF\n","line":153}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}